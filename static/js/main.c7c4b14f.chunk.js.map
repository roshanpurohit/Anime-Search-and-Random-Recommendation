{"version":3,"sources":["context/search.js","pages/Home.js","components/Navbar.js","components/AnimeCard.js","components/AnimeList.js","pages/Results.js","components/AnimeInfo.js","pages/ViewSingle.js","pages/RandomRec.js","components/anime1.png","pages/About.js","pages/MyList.js","pages/App.js","index.js"],"names":["searchContext","createContext","animeData","singleData","watchList","setWatchList","search","setData","setSingleData","Alert","props","elevation","variant","Home","useState","open","setOpen","snackBarOpen","setSnackBarOpen","handleSnackBarClose","useContext","move","useHistory","input","setInput","className","Backdrop","sx","color","zIndex","theme","drawer","onClick","CircularProgress","push","style","margin","border","display","flexDirection","alignItems","src","maxHeight","maxWidth","alt","justifyContent","alignSelf","FormControl","type","Input","placeholder","value","onChange","e","target","IconButton","disabled","preventDefault","axios","get","then","data","results","localStorage","setItem","JSON","stringify","catch","err","console","log","height","width","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","severity","NavBar","handleSubmit","Navbar","expand","position","Brand","href","fontFamily","fontSize","padding","Nav","Toggle","aria-controls","Collapse","id","Form","inline","onSubmit","Link","Button","AnimeCard","single","imageUrl","image_url","synopsis","length","substring","title","GridListTile","Grid","container","item","xs","Paper","Tooltip","placement","Typography","component","paragraph","marginBottom","fetch","mal_id","response","json","AnimeList","GridList","map","anime","Results","dataStatus","setDataStatus","useEffect","undefined","parse","getItem","error","Box","mt","textAlign","alignContent","AnimeInfo","info","episodes","rating","airing","broadcast","score","url","handleClose","reason","spacing","direction","justify","temp","object","set","Set","Array","from","family","Skeleton","animation","ViewSingle","Object","keys","RandomRec","Math","floor","random","randomId","setRandom","resultData","setResultData","serverError","setServerError","ok","status","rowGap","columnGap","images","jpg","size","About","anime1","MyList","listStatus","setListStatus","listItem","i","index","filter","handleDelete","Delete","App","setAnimeData","setSingle","setList","Provider","searchedTerm","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7c4b14f.chunk.js","sourcesContent":["import { createContext } from 'react';\r\nexport const searchContext = createContext(\r\n    {\r\n        animeData:[] ,\r\n        singleData:{},\r\n        watchList:[],\r\n        setWatchList:()=>{},\r\n        search:()=>{},\r\n        setData:()=>{},\r\n        setSingleData:()=>{}\r\n    }\r\n) \r\n\r\n","import { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { searchContext } from \"../context/search\";\r\nimport { FormControl, Input, IconButton, Snackbar } from \"@material-ui/core\";\r\nimport { Backdrop, CircularProgress } from \"@mui/material\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport \"../styles/Home.scss\";\r\nimport axios from \"axios\";\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst Home = () => {\r\n    const [open, setOpen] = useState(false);\r\n    const [snackBarOpen, setSnackBarOpen] = useState(false);\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleSnackBarClose = () => {\r\n        setSnackBarOpen(false);\r\n    };\r\n    const search = useContext(searchContext);\r\n    const move = useHistory();\r\n    const [input, setInput] = useState(\"\");\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setOpen(true);\r\n        axios\r\n            .get(`https://api.jikan.moe/v3/search/anime?q=${input}&limit=30`)\r\n            .then((data) => {\r\n                data = data.data;\r\n                search.setData(data.results);\r\n                localStorage.setItem(\"myData\", JSON.stringify(data.results));\r\n                setOpen(false);\r\n                move.push(\"./results\");\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setOpen(false);\r\n                setSnackBarOpen(true);\r\n            });\r\n    };\r\n    const handleRecommendClick = () => {\r\n        move.push(\"./random-recommendation\");\r\n    };\r\n    const handleListClick = () => {\r\n        move.push(\"./MyList\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"home-outer\">\r\n            <Backdrop sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }} open={open} onClick={handleClose}>\r\n                <CircularProgress color=\"inherit\" />\r\n                Fetching Data...\r\n            </Backdrop>\r\n            <div className=\"home-recommend\" onClick={handleRecommendClick}>\r\n                <div\r\n                    style={{\r\n                        margin: \"20px\",\r\n                        border: \"3px solid pink\",\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"center\",\r\n                    }}\r\n                >\r\n                    Recommend\r\n                    <img\r\n                        src=\"https://i.ibb.co/sChpJ3r/kindpng-4816161.png\"\r\n                        style={{ maxHeight: \"75px\", maxWidth: \"75px\" }}\r\n                        alt=\"\"\r\n                        border=\"0\"\r\n                    />\r\n                    Random Anime\r\n                </div>\r\n            </div>\r\n            <div className=\"home-search\">\r\n                <div className=\"home-watchlist-button\" onClick={handleListClick}>\r\n                    <div\r\n                        style={{\r\n                            margin: \"20px\",\r\n                            border: \"3px solid pink\",\r\n                            display: \"flex\",\r\n                            flexDirection: \"row\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        My Watch List\r\n                        <img\r\n                            src=\"https://i.ibb.co/SQLC1RL/Seek-Png-com-umaru-png-1870819.png\"\r\n                            style={{ maxHeight: \"70px\", maxWidth: \"60px\", alignSelf: \"center\" }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <form className=\"home-form\">\r\n                    <FormControl type=\"submit\" className=\"home-FormControl\">\r\n                        <Input\r\n                            placeholder=\"Search for your favourite anime...\"\r\n                            className=\"home-input\"\r\n                            value={input}\r\n                            onChange={(e) => {\r\n                                setInput(e.target.value);\r\n                            }}\r\n                        />\r\n                        <IconButton\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            type=\"submit\"\r\n                            disabled={!input}\r\n                            className=\"home-iconButton\"\r\n                            onClick={handleSubmit}\r\n                        >\r\n                            <img\r\n                                src=\"https://i.ibb.co/JzTfkYX/Animes-que-podr-an-ser-series.jpg\"\r\n                                style={{ height: \"90px\", width: \"75px\", alignSelf: \"center\" }}\r\n                            />\r\n                        </IconButton>\r\n                    </FormControl>\r\n                </form>\r\n                <Snackbar\r\n                    anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\r\n                    open={snackBarOpen}\r\n                    autoHideDuration={3000}\r\n                    onClose={handleSnackBarClose}\r\n                >\r\n                    <Alert onClose={handleSnackBarClose} severity=\"error\">\r\n                        Could not Fetch data!\r\n                    </Alert>\r\n                </Snackbar>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import { Navbar, Nav, Button, FormControl, Form } from \"react-bootstrap\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport { Snackbar } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { useState } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { searchContext } from \"../context/search\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Backdrop, CircularProgress } from \"@mui/material\";\r\nimport \"../styles/Navbar.scss\";\r\nimport axios from \"axios\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst NavBar = () => {\r\n    const search = useContext(searchContext);\r\n    const move = useHistory();\r\n    const [open, setOpen] = useState(false);\r\n    const [snackBarOpen, setSnackBarOpen] = useState(false);\r\n    const [input, setInput] = useState(\"\");\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleSnackBarClose = () => {\r\n        setSnackBarOpen(false);\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setOpen(true);\r\n        axios\r\n            .get(`https://api.jikan.moe/v3/search/anime?q=${input}&limit=30`)\r\n            .then((data) => {\r\n                data = data.data;\r\n                search.setData(data.results);\r\n                localStorage.setItem(\"myData\", JSON.stringify(data.results));\r\n                setOpen(false);\r\n                console.log(\"closed!\");\r\n                move.push(\"./results\");\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setOpen(false);\r\n                setSnackBarOpen(true);\r\n            });\r\n    };\r\n    return (\r\n        <Navbar className=\"navbar-color\" expand=\"lg\" variant=\"light\" position=\"sticky\">\r\n            <Backdrop sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }} open={open} onClick={handleClose}>\r\n                <CircularProgress color=\"inherit\" />\r\n                Fetching Data...\r\n            </Backdrop>\r\n            <Navbar.Brand\r\n                href=\"/Anime-Search-and-Random-Recommendation/#/\"\r\n                style={{ color: \"pink\", fontFamily: \"DELIRIUM NCV\", fontSize: \"60px\", padding: \"0px\" }}\r\n            >\r\n                 <img\r\n                    src=\"https://i.ibb.co/23cTvqw/556-5560500-giorno-giovanna-png.png\"\r\n                    alt=\"556-5560500-giorno-giovanna-png\"\r\n                    style={{maxHeight:'100px'}}\r\n                />\r\n                ANIME LIST\r\n               \r\n            </Navbar.Brand>\r\n            <Nav className=\"ml-auto\">\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Form inline onSubmit={handleSubmit} className=\"navbar-form\">\r\n                        <FormControl\r\n                            type=\"text\"\r\n                            placeholder=\"Search\"\r\n                            className=\"navbar-searchBar\"\r\n                            onChange={(e) => {\r\n                                setInput(e.target.value);\r\n                            }}\r\n                        />\r\n                        <IconButton\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            type=\"submit\"\r\n                            disabled={!input}\r\n                            className=\"navbar-iconButton\"\r\n                            onClick={handleSubmit}\r\n                        >\r\n                            <SearchIcon />\r\n                        </IconButton>\r\n                    </Form>\r\n                    <Nav.Link href=\"/Anime-Search-and-Random-Recommendation/\">\r\n                        <Button variant=\"custom\" className=\"navbar-button\">\r\n                            Home\r\n                        </Button>{\" \"}\r\n                    </Nav.Link>\r\n                    <Nav.Link href=\"/Anime-Search-and-Random-Recommendation/#/MyList\">\r\n                        <Button variant=\"custom\" className=\"navbar-button\">\r\n                            My Watchlist\r\n                        </Button>\r\n                    </Nav.Link>\r\n                    <Nav.Link href=\"/Anime-Search-and-Random-Recommendation/#/about\">\r\n                        <Button variant=\"custom\" className=\"navbar-button\">\r\n                            About\r\n                        </Button>\r\n                    </Nav.Link>\r\n                </Navbar.Collapse>\r\n            </Nav>\r\n            <Snackbar\r\n                anchorOrigin={{ vertical: \"top\", horizontal: \"left\" }}\r\n                open={snackBarOpen}\r\n                autoHideDuration={3000}\r\n                onClose={handleSnackBarClose}\r\n            >\r\n                <Alert onClose={handleSnackBarClose} severity=\"error\">\r\n                    Could not Fetch data!\r\n                </Alert>\r\n            </Snackbar>\r\n        </Navbar>\r\n    );\r\n};\r\n\r\nexport default NavBar;\r\n","import  { useContext ,useState} from 'react';\r\nimport './AnimeCardStyle.scss';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { GridListTile,Typography,Paper,Link,Grid,Tooltip,Button} from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport {searchContext} from '../context/search';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst AnimeCard = ({single})=> {\r\n    const [snackBarOpen,setSnackBarOpen]  = useState(false);\r\n    const move = useHistory();\r\n    const search =  useContext(searchContext);\r\n    const imageUrl = single.image_url;\r\n    const synopsis = single.synopsis.length>30?\r\n    `${single.synopsis.substring(0,30)}...`:single.synopsis;\r\n    const title = single.title.length>15?\r\n    `${single.title.substring(0,15)}...`:single.title;\r\n\r\n    const handleClick=()=>{\r\n      \r\n      fetch(`https://api.jikan.moe/v3/anime/${single.mal_id}`)\r\n      .then((response)=>response.json())\r\n      .then((data)=>{\r\n          search.setSingleData(data);\r\n          localStorage.setItem('singleData',JSON.stringify(data));\r\n      })\r\n      .catch((e)=>{\r\n        setSnackBarOpen(true);\r\n      })\r\n      move.push('./ViewSingle');\r\n    }\r\n    const handleSnackBarClose=()=>{\r\n      setSnackBarOpen(false);\r\n    }\r\n    \r\n    return (\r\n        <GridListTile className=\"animeCard__container\">\r\n          <Grid container item xs={12} >\r\n            <Paper className = \"animeCard__paper\">\r\n              <img src={imageUrl} alt={title} style={ {maxHeight:300} } />\r\n              <Tooltip title={single.title} placement=\"top\">\r\n              <Typography variant=\"h5\" component=\"h2\" className=\"animeCard__typo\">{title}</Typography>\r\n              </Tooltip>\r\n              <Typography variant=\"body2\" component=\"h2\" paragraph={true} className=\"animeCard__typo\" >\r\n                  {synopsis}\r\n              </Typography>\r\n              <div >\r\n              <Link type=\"button\" variant=\"body1\" style={{marginBottom:0,color:\"lightgreen\"}} onClick={handleClick} >\r\n               Click for more                        \r\n              </Link>\r\n              </div>\r\n\r\n            </Paper>\r\n          </Grid>\r\n          <Snackbar\r\n                    anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\r\n                    open={snackBarOpen}\r\n                    autoHideDuration={3000}\r\n                    onClose={handleSnackBarClose}\r\n                >\r\n                    <Alert onClose={handleSnackBarClose} severity=\"error\">\r\n                        Could not Fetch data!\r\n                    </Alert>\r\n                </Snackbar>\r\n        </GridListTile>\r\n        \r\n    );\r\n    \r\n}\r\n\r\nexport default AnimeCard\r\n","import React from \"react\";\r\nimport AnimeCard from \"./AnimeCard\";\r\nimport { GridList } from \"@material-ui/core\";\r\nconst AnimeList = ({ data }) => {\r\n    return data ? (\r\n        <GridList>\r\n            {\" \"}\r\n            {data.map((anime) => (\r\n                <AnimeCard key={anime.mal_id} single={anime} />\r\n            ))}\r\n            )\r\n        </GridList>\r\n    ) : (\r\n        <p>No Data </p>\r\n    );\r\n};\r\n\r\nexport default AnimeList;\r\n","import { useEffect,useContext, useState} from 'react';\r\nimport {searchContext} from '../context/search';\r\nimport AnimeList from '../components/AnimeList';\r\nimport {Box,Typography} from '@material-ui/core';\r\nconst Results = () => {\r\n    const search = useContext(searchContext);\r\n    const [ dataStatus, setDataStatus] =  useState(true);\r\n    useEffect(()=>{\r\n        if(search.animeData === undefined || search.animeData.length === 0)\r\n        {\r\n            try{\r\n            search.setData(JSON.parse(localStorage.getItem('myData')));\r\n             }\r\n            catch(error){\r\n            setDataStatus(false);\r\n        }\r\n        \r\n        }\r\n     },[search])\r\n    return (<Box mt={2} style={{textAlign:'center',alignContent:'center'}}>\r\n             { (dataStatus && <AnimeList data={search.animeData} />) || (!dataStatus && \r\n              <Typography variant=\"h4\" className=\"home-typo\">Data Empty!</Typography>)\r\n              }\r\n            \r\n            </Box>);\r\n}\r\n \r\nexport default Results;","import { Grid, Paper, Typography, Link, Button, Snackbar } from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport \"./singleViewStyle.scss\";\r\nimport { useContext, useState } from \"react\";\r\nimport { searchContext } from \"../context/search\";\r\nimport \"../styles/AnimeInfo.scss\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Skeleton from \"@mui/material/Skeleton\";\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst AnimeInfo = ({ info }) => {\r\n    const search = useContext(searchContext);\r\n    const [open, setOpen] = useState(false);\r\n    const { title, image_url, episodes, rating, airing, broadcast, score, url, mal_id } = info;\r\n    const handleListClick = () => {\r\n        var temp = [...search.watchList];\r\n        temp.push({ title: title, episodes: episodes ? episodes : \"N/A\", id: mal_id, url: url, image_url: image_url });\r\n        let object = temp.map(JSON.stringify);\r\n        let set = new Set(object);\r\n        temp = Array.from(set).map(JSON.parse);\r\n        search.setWatchList(temp);\r\n        setOpen(true);\r\n    };\r\n    const handleClose = (reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Grid container spacing={10} direction=\"row\" justify=\"center\" alignItems=\"center\" alignContent=\"center\">\r\n            <Grid item>\r\n                <div className=\"imageClass\">\r\n                    <img src={image_url} alt=\"\" style={{ maxHeight: 250, border: \"5px solid #fff\" }} key={image_url} />\r\n                </div>\r\n            </Grid>\r\n\r\n            <Paper elevation={3} className=\"singleView-paper\">\r\n                {info ? (\r\n                    <div\r\n                        style={{\r\n                            margin: \"0px\",\r\n                            border: \"3px solid pink\",\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            justifyContent: \"center\",\r\n                            padding: \"15px\",\r\n                        }}\r\n                    >\r\n                        <Typography variant=\"h5\" component=\"h2\" className=\"singleView-typo\">\r\n                            Title:{title}\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" component=\"h2\" className=\"singleView-typo\">\r\n                            Airing:{airing ? \"Yes\" : \"No\"}\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" component=\"h2\" className=\"singleView-typo\">\r\n                            Broadcast:{broadcast ? broadcast : \"N/A\"}\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" component=\"h2\" className=\"singleView-typo\">\r\n                            Score:{score ? score : \"N/A\"}\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" component=\"h2\" className=\"singleView-typo\">\r\n                            Rating:{rating ? rating : \"N/A\"}\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" component=\"h2\" className=\"singleView-typo\">\r\n                            Episodes:{episodes ? episodes : \"N/A\"}\r\n                        </Typography>\r\n                        <Link type=\"button\" variant=\"body1\" href={url} style={{ color: \"lightgreen\" }}>\r\n                            MyAnimeList\r\n                        </Link>\r\n                        <br />\r\n                        <Button variant=\"outlined\" className=\"button-color\" onClick={handleListClick}>\r\n                            <font family=\"Product Sans\">Add to Watch List</font>\r\n                            <AddIcon />\r\n                        </Button>\r\n                        <Snackbar\r\n                            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n                            open={open}\r\n                            autoHideDuration={3000}\r\n                            onClose={handleClose}\r\n                        >\r\n                            <Alert onClose={handleClose} severity=\"success\">\r\n                                {title} added to watchlist!\r\n                            </Alert>\r\n                        </Snackbar>\r\n                    </div>\r\n                ) : (\r\n                    <Skeleton animation=\"wave\" />\r\n                )\r\n                }\r\n            </Paper>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default AnimeInfo;\r\n","import { Typography} from '@material-ui/core';\r\nimport React, { useContext, useState,useEffect } from 'react'\r\nimport AnimeInfo from '../components/AnimeInfo';\r\nimport {searchContext} from '../context/search';\r\nimport {Box} from '@material-ui/core';\r\n\r\nconst ViewSingle=()=>{\r\n    const search = useContext(searchContext);\r\n    const [dataStatus,setDataStatus]=useState(true);\r\n    \r\n useEffect(()=>{\r\n    \r\n    if(search.singleData === undefined || Object.keys(search.singleData).length === 0)\r\n        {\r\n            \r\n            try{\r\n                  search.setSingleData(JSON.parse(localStorage.getItem('singleData')));\r\n                }\r\n        catch (error){\r\n            console.log(error);\r\n            setDataStatus(false);\r\n        }\r\n        \r\n        }\r\n       \r\n    },[search])\r\n    \r\n    return( <Box mt={12}>{\r\n        ( dataStatus && <AnimeInfo info={search.singleData} />\r\n            ) || (<Typography variant=\"h4\" component=\"h2\">\r\n     Data Empty!\r\n     </Typography>)\r\n      }\r\n     </Box>\r\n     \r\n     );\r\n         \r\n    \r\n    \r\n    \r\n}\r\n\r\nexport default ViewSingle\r\n","import { useEffect, useState, useContext } from \"react\";\r\nimport { Grid, Typography, Paper, Button, Link, Snackbar, Tooltip } from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Cached from \"@material-ui/icons/Cached\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { searchContext } from \"../context/search\";\r\nimport \"../styles/RandomRec.scss\";\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst RandomRec = () => {\r\n    const [open, setOpen] = useState(false);\r\n    const [randomId, setRandom] = useState(Math.floor(Math.random() * 1000 + 1));\r\n    const [resultData, setResultData] = useState(null);\r\n    const [serverError, setServerError] = useState(false);\r\n    const search = useContext(searchContext);\r\n\r\n    const handleClick = () => {\r\n        setRandom(0);\r\n    };\r\n    const handleListClick = () => {\r\n        var temp = [...search.watchList];\r\n        temp.push({\r\n            title: resultData.title,\r\n            episodes: resultData.episodes ? resultData.episodes : \"N/A\",\r\n            id: resultData.mal_id,\r\n            url: resultData.url,\r\n            image_url: resultData.image_url,\r\n        });\r\n        let object = temp.map(JSON.stringify);\r\n        let set = new Set(object);\r\n        temp = Array.from(set).map(JSON.parse);\r\n        search.setWatchList(temp);\r\n        setOpen(true);\r\n    };\r\n    const handleClose = (reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetch(`https://api.jikan.moe/v4/anime/${randomId}`)\r\n            .then((response) => {\r\n                if (!response.ok) {\r\n                    if (response.status >= 400 && response.status < 500) {\r\n                        response.json().then((data) => {\r\n                            console.log(data.error);\r\n                            console.log(\"Trying another ID...\");\r\n                            setRandom(Math.floor(Math.random() * 1000 + 1));\r\n                        });\r\n                    } else {\r\n                        console.log(\"Server is unavailable\");\r\n                        setServerError(true);\r\n                    }\r\n                } else {\r\n                    response.json().then((data) => {\r\n                          setResultData(data.data);\r\n\r\n                    });\r\n                   \r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setServerError(true);\r\n            });\r\n    }, [randomId, search]);\r\n\r\n    return (\r\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" alignContent=\"center\" spacing={3}>\r\n            {resultData && (\r\n                <div style={{padding:\"30px\",rowGap:\"20px\"}}>\r\n                        <Typography variant=\"h1\" component=\"h2\" className=\"random-typo\">\r\n                        <u>{resultData.title}</u> \r\n                        </Typography>\r\n               \r\n                \r\n                <Grid item>\r\n                <div style={{display:'flex',flexDirection:\"row\",columnGap:\"20px\",padding:\"30px\"}}>\r\n                    <img src={resultData.images.jpg.image_url} alt=\"\" style={{ maxHeight: 300 }} className=\"random-image\" key={resultData.images.jpg.image_url} />\r\n                \r\n           \r\n                <div className=\"random-buttons\">\r\n                    <Grid item>\r\n                        <Tooltip title=\"Recommend something else\" placement=\"right\">\r\n                            <Button className=\"button-color\">\r\n                                <Cached onClick={handleClick} fontSize=\"large\" />\r\n                            </Button>\r\n                        </Tooltip>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button variant=\"custom\" className=\"button-color\" onClick={handleListClick}>\r\n                            <font family=\"Product Sans\" size=\"5\">\r\n                                Add to Watch List\r\n                            </font>\r\n                            <AddIcon />\r\n                        </Button>\r\n                        <Snackbar\r\n                            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n                            open={open}\r\n                            autoHideDuration={2000}\r\n                            onClose={handleClose}\r\n                        >\r\n                            <Alert onClose={handleClose} severity=\"success\">\r\n                                {resultData.title} added to watchlist!\r\n                            </Alert>\r\n                        </Snackbar>\r\n                        \r\n                    </Grid>\r\n                    </div>\r\n                    </div>\r\n\r\n\r\n                \r\n                </Grid>\r\n                </div>\r\n            ) }\r\n            <Grid item>\r\n                <Paper elevation={4} className=\"recommend-paper\">\r\n                    {(resultData  && (\r\n                        <div className=\"recommend-paper\">\r\n                            <div className=\"inner-recommend-paper\">\r\n                                <Typography variant=\"h5\" component=\"h2\" className=\"font-color\" paragraph={true}>\r\n                                    <b>\r\n                                        <u>Title:</u>\r\n                                    </b>{\" \"}\r\n                                    {resultData.title}\r\n                                    <br />\r\n                                    <b>\r\n                                        <u>Synopsis:</u>\r\n                                    </b>{\" \"}\r\n                                    {resultData.synopsis}\r\n                                    <br />\r\n                                    <Link href={resultData.url} className=\"about-link\">\r\n                                        MyAnimeList\r\n                                    </Link>\r\n                                </Typography>\r\n                            </div>\r\n                        </div>\r\n                    )) ||\r\n                        (!serverError && <p className=\"loading\">Generating Recommendation</p>) ||\r\n                        (serverError && (\r\n                            <Typography variant=\"h4\" component=\"h2\" className=\"font-color\">\r\n                                Server is unavailable at the moment\r\n                                <br />\r\n                                Try Again Later\r\n                            </Typography>\r\n                        ))}\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n        // <div>\r\n        //     Hello!\r\n        // </div>\r\n    );\r\n};\r\n\r\nexport default RandomRec;\r\n","export default __webpack_public_path__ + \"static/media/anime1.fa7e8157.png\";","import {Grid,Paper,Typography,Link} from '@material-ui/core';\r\nimport anime1 from '../components/anime1.png';\r\nimport '../styles/About.scss';\r\nconst About = () => {\r\n\r\n     return ( \r\n     <Grid\r\n    container\r\n    direction=\"row\"\r\n    justify=\"center\"\r\n    alignContent=\"center\"\r\n    alignItems = \"center\"\r\n    className =\"about-Grid\"\r\n    >\r\n    <Paper elevation={3}  className=\"about-Paper\">\r\n    <img  src={anime1}  alt=\"\" style={{maxHeight:200}} />\r\n    <Typography variant=\"h5\" component=\"h2\" className =\"about-Typo\" >\r\n            <b>Project</b>: Simple Anime search result viewer <br/>\r\n            with a little info on requested results , <br/>Random Recommendation\r\n            generator  along with a watch-list feature<br/>\r\n            pulls data from <br/><i>MyAnimeList</i> API<br/>\r\n            <b>Made using</b> : React js,Jikan API<br/>\r\n           <b> Done by</b>: Roshan Purohit<br/>\r\n            <Link href=\"https://github.com/roshanpurohit\" className=\"about-link\">GitHub</Link>\r\n    </Typography>\r\n     </Paper>\r\n     </Grid>\r\n     );\r\n}\r\n \r\nexport default About;","import {Grid,Typography,IconButton} from '@material-ui/core';\r\nimport { useContext, useEffect,useState} from 'react';\r\nimport { searchContext } from '../context/search';\r\nimport { Delete } from '@material-ui/icons';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport { useHistory } from 'react-router-dom';\r\nimport '../styles/MyList.scss';\r\nconst MyList = () => {\r\n  const handleClick=(id)=>{\r\n   \r\n    fetch(`https://api.jikan.moe/v3/anime/${id}`)\r\n    .then((response)=>response.json())\r\n    .then((data)=>{\r\n        search.setSingleData(data);\r\n        localStorage.setItem('singleData',JSON.stringify(data));\r\n    })\r\n    move.push('./ViewSingle');\r\n  }\r\n   \r\n    const search = useContext(searchContext);\r\n    const move = useHistory();\r\n    const [listStatus,setListStatus]=useState(true);\r\n    const handleDelete=(index)=>{\r\n      var temp = [...search.watchList].filter((item,i)=>i!==index);\r\n      search.setWatchList(temp);\r\n    }\r\n    useEffect(()=>{\r\n      search.watchList.length===0?setListStatus(false):setListStatus(true);\r\n      localStorage.setItem(\"myWatchList\",JSON.stringify(search.watchList));\r\n    },[search])\r\n    \r\n    return ( \r\n    <Grid \r\n    container\r\n    direction=\"column\"\r\n    alignItems=\"center\"\r\n    alignContent=\"center\"\r\n    justify=\"center\"\r\n    spacing={5}\r\n    >\r\n        <Grid item  xs={12}>\r\n             <Typography  variant=\"h3\" component=\"h2\" className= \"heading-typo\" >My Watch List </Typography>\r\n           </Grid>\r\n    <Grid item>\r\n    {\r\n        listStatus && search.watchList.map((listItem,i) =>(\r\n            \r\n            <div className=\"listElement\"  key={listItem['id']} >\r\n       <div style={{display:\"inline-flex\",alignItems:\"center\"}}  key={listItem['id']}>\r\n        <img src={listItem['image_url']} alt=\"\" style={ {maxHeight:75} } />\r\n        <div key={listItem['id']}>\r\n        <Typography variant=\"h5\" component=\"h2\" className=\"font-color\">{listItem['title']}</Typography> \r\n        <Typography variant=\"h6\" component=\"h2\" className=\"font-color\">Episodes:{listItem['episodes']}</Typography> \r\n        </div>\r\n        </div>\r\n       \r\n        <div className=\"list-buttons\">\r\n        <IconButton  onClick={()=>{handleDelete(i)}}><Delete fontSize=\"large\" /></IconButton>\r\n        <IconButton onClick={()=>{handleClick(listItem['id'])}}><ArrowForwardIosIcon  /></IconButton>\r\n        </div>\r\n        </div>\r\n               \r\n        )  )\r\n        \r\n      }\r\n       {\r\n        !listStatus &&  <Typography variant=\"h5\" component=\"h2\" className=\"font-color\">List Empty</Typography> \r\n              }\r\n      \r\n   </Grid>\r\n   </Grid>\r\n\r\n\r\n\r\n \r\n     );\r\n}\r\n \r\nexport default MyList;","import Home from './Home';\r\nimport Navbar from \"../components/Navbar\";\r\nimport Results from './Results';\r\nimport ViewSingle from './ViewSingle';\r\nimport RandomRec from './RandomRec';\r\nimport {HashRouter as Router,Switch,Route} from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport { searchContext} from '../context/search';\r\nimport About from './About';\r\nimport MyList from './MyList';\r\nfunction App() {\r\n  const [animeData,setAnimeData]=useState([]);\r\n  const [ singleData,setSingle] = useState({});\r\n  const[watchList,setList]=useState(\r\n    localStorage.getItem('myWatchList')?\r\n    JSON.parse(localStorage.getItem('myWatchList')):[]);\r\n  const setData = (data)=>{\r\n      setAnimeData(data);\r\n  }\r\n  const setSingleData =(data)=>{\r\n    setSingle(data);\r\n  }\r\n  const setWatchList=(data)=>{\r\n    setList(data);\r\n  }\r\n  const search = (searchedTerm)=>\r\n  {\r\n     return\r\n  }\r\n  return (\r\n    <searchContext.Provider value = {\r\n      {animeData,singleData,watchList,setWatchList,setData,setSingleData,search}\r\n      } >\r\n    <div className=\"App\">\r\n      <div className=\"blur\">\r\n    <Router>\r\n      <Navbar />\r\n        \r\n            <Switch>\r\n            <Route exact  path=\"/\" >\r\n               <Home />\r\n              </Route>\r\n              <Route exact  path=\"/about\" >\r\n               <About />\r\n              </Route>\r\n              <Route exact  path=\"/results\" >\r\n               <Results />\r\n              </Route>\r\n              <Route exact  path=\"/ViewSingle\" >\r\n               <ViewSingle />\r\n              </Route>\r\n              <Route exact  path=\"/random-recommendation\" >\r\n               <RandomRec/>\r\n              </Route>\r\n              <Route exact  path=\"/MyList\" >\r\n               <MyList/>\r\n              </Route>\r\n            </Switch>\r\n        </Router>\r\n        </div>\r\n       </div>\r\n    </searchContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './pages/index.css';\r\nimport App from './pages/App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}